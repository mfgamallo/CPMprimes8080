; MATH LIBRARY	3 OCTOBER 2021

; DIVISION: A - DIVISOR, B - DIVIDEND
; RESULTS: A - QUOTIENT B - REMAINDER
DIV8:	MVI	C,0H	; ZERO C
DIVL:	CMP	B	; COMPARE DIVISOR AND DIVIDEND
	JC	DIVND	; IF LESS GO TO END
	SBB	B	; SUBSTRACT ONE MORE DIVIDEND
	INR	C	; INCREMENT QUOTIENT
	JMP	DIVL	; LOOP
DIVND:	MOV	B,A	; REMAINDER
	MOV	A,C	; QUOTIENT
	RET

; 16 BIT DIV
; HL - DIVISOR, DE - DIVIDEND
; HL - QUOTIENT, DE - REMINDER
DIV16:	PUSH	B	; SAVE REGISTERS
	LXI	B,0	; RESET REMINDER
DV16L:	CALL	CMP16	; COMPARE
	JC	DV16E	; IF SMALLER, END
	CALL	SUB16	; ELSE, SUBSTRACT
	INX	B	; INCREASE REMINDER
	JMP	DV16L	; LOOP
DV16E:	XCHG		; REMINDER
	MOV	H,B	; QUOTIENT
	MOV	L,C
	POP	B
	RET

; 16 BIT LONG DIVIDER ALGORITHM IMPL
; HL - DIVIDEND, DE - DIVISOR
; HL - QUOTIENT, DE - REMINDER
LNGDIV:	PUSH	B	; SAVE REGISTERS
	LXI	B,0	; INITIAL QUOT AND REM
	PUSH	B
	PUSH	B
	XCHG		; SAVE DIVISOR
	SHLD	DIVSOR
	XCHG
	MVI	B,16	; INIT COUNTER
LDIVL:	XRA	A	; CLEAN FLAGS
	CALL	RAL16	; ROTATE DIVIDEND
	XTHL		; BRING REMINDER
	CALL	RAL16	; ROTATE REMINDER USING
			; CARRY FLAG FROM DIVIDEND
	CALL	CMP16	; COMPARE REMINDER AND
			; DIVISOR
	JNC	LTD	; IF >= SUBSTRACT
	XRA	A	; ELSE CLEAN FLAGS
	JMP	SHQT
LTD:	CALL	SUB16	; SUBSTRACT DIVISOR FROM
			; REMINDER
	STC		; SET CARRY FLAG
SHQT:	XCHG		; BRING QUOT
	POP	H
	XTHL
	CALL	RAL16	; SHIFT QUOTIENT
	DCR	B	; DEC COUNTER
	JZ	LDEND	; IF 0 FINISH
	XTHL		; BRING DEND AND DSOR
	XCHG
	PUSH	H
	LHLD	DIVSOR
	XCHG
	JMP	LDIVL	; LOOP
LDEND:	POP	B	; RESTORE REGISTERS
	POP	B
	RET
DIVSOR:	DW	0H

; 16 BIT ROTATE LEFT THROUGH CARRY
; HL - REGISTER PAIR TO ROTATE
RAL16:	MOV	A,L
	RAL
	MOV	L,A
	MOV	A,H
	RAL
	MOV	H,A
	RET

; 16 BIT SUBSTRACT
; HL - OPERAND, DE - OPERAND
; HL - RESULT
SUB16:	MOV	A,L	; LOWER BYTE
	SUB	E	; SUBSTRACT BYTE
	MOV	L,A	; RECORD RESULT
	MOV	A,H	; HIGHER BYTE
	SBB	D	; SUBSTRACT BYTE
	MOV	H,A	; RECORD RESULT
	RET

; 16 BIT COMPARE
; HL - OPERAND, DE - OPERAND
CMP16:	MOV	A,H	; COMPARE HIGHER BYTE
	CMP	D
	RNZ		; RETURN IF DIFFERENT
	MOV	A,L	; COMPARE LOWER BYTE
	CMP	E
	RET
