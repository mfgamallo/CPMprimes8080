; PRINT DECIMAL NUMBERS	25 SEPTEMBER 2021

; CONVERT NUMBER TO ASCII
; HL - NUMBER TO PRINT
CTAB:	PUSH	A	; SAVE REGISTERS
	PUSH	D
	PUSH	H	; THE ACTUAL NUMBER, SAVE FOR LATER
	LXI	H,DBUF	; CLEAN BUFFER
	MVI	A,5	; FIVE POSITIONS IN BUFFER
	CALL	CLBUF	; CLEAN BUFFER
	POP	D	; THE NUMBER TO ADD
	CALL	DECA	; ADD NUMBER
	MVI	A,5
	LXI	H,DBUF
	LXI	D,RBUF
	CALL	CTA	; CONVERT TO ASCII
	LXI	H,RBUF	; RETURN RESULT BUFFER
	POP	D	; RESTORE REGISTERS
	POP	A
	RET

; CONVERT TO ASCII
; HL - POINT TO FIRST DIGIT
; DE - POINT TO NEW BUFFER FIRST CHAR
; A  - NUMBER OF DIGITS
CTA:	PUSH	B	; SAVE REGISTERS
	MOV	B,A	; DIGIT COUNTER
NXTD:	MOV	A,M	; GET DIGIT
	ADI	30H	; CONVERT TO ASCII
	STAX	D	; STORE
	DCR	B	; COUNT DIGIT
	JZ	WDEX	; IF NO MORE DIGITS WE'RE DONE
	INX	H	; ELSE, POINT TO NEXT DIGIT
	INX	D
	JMP	NXTD	; LOOP
WDEX:	POP	B	; RESTORE REGISTERS
	RET

; ADD DECIMAL
; HL - POINT TO LAST DIGIT OF CURRENT NUMBER
; DE - NUMBER TO ADD
DECA:	PUSH	B	; SAVE REGISTERS
DLP2:	LXI	B,0	; RESET COUNTER
	MOV	A,M	; GET FROM BUFFER
	PUSH	H	; REMEMBER POINTER
	MVI	H,0	; PREPARE TO ADD
	MOV	L,A
	DAD	D	; ADD
DLP1:	CALL	GT9	; HL GREATER THAN 9?
	JNZ	EDLP1	; NO - LEAVE LOOP
	MVI	D,0	; 10 IN DE
	MVI	E,10
	CALL	SUB16	; SUBSTRACT TO HL
	INX	B	; INCREASE COUNTER
	JMP	DLP1	; LOOP
EDLP1:	MOV	A,L	; DIGIT
	POP	H	; RECALL BUFFER
	MOV	M,A	; STORE DIGIT
	MOV	A,C	; BC ZERO?
	ORA	B
	JZ	EDLP2	; LEAVE LOOP
	DCX	H	; ELSE, NEXT DIGIT
	MOV	D,B	; MOVE DC TO DE
	MOV	E,C
	JMP	DLP2	; LOOP
EDLP2:	POP	B	; RESTORE REGISTERS
	RET

; CLEAN BUFFER - SET TO ZEROES
; HL - POINTER TO BUFFER
; A  - NUMBER OF DIGITS
CLBUF:	MVI	M,0	; ZERO POSITION
	DCR	A	; DECREMENT A
	JZ	CLEND	; IF NO MORE POSITIONS END
	INX	H	; ELSE, POINT TO NEXT DIGIT
	JMP	CLBUF	; LOOP
CLEND:	RET

; HL GREATER THAN 9
; Z - YES, NZ - NO
GT9:	XRA	A	; ZERO ACCUMULATOR
	ADD	H	; HIGHER BYTE
	JZ	ZHC	; IF ZERO CONTINUE
	XRA	A	; ELSE, SET ZERO FLAG
	RET
ZHC:	MOV	A,L	; LOWER BYTE
	CPI	10	; COMPARE TO 10
	JC	ZLC	; IF LESS, CONTINUE
	XRA	A	; ELSE, SET ZERO FLAG
	RET
ZLC:	ORI	0FFH	; RESET ZERO FLAG
	RET

; DIGIT BUFFER
DBUF:	DB	0,0,0,0,0

; RESULT BUFFER
RBUF:	DB	'ABCDE$'
